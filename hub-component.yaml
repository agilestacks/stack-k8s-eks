---
version: 1
kind: component
meta:
  name: stack-k8s-eks
  title: Amazon EKS
  brief: Managed Kubernetes Service
  description: >
    Amazon Elastic Kubernetes Service is a fully managed Kubernetes service. Amazon customers such as Intel, Snap, Intuit, GoDaddy, and Autodesk trust EKS to run their most sensitive and mission critical applications because of its security, reliability, and scalability.
  version: 1.20
  source:
    dir: ../stack-k8s-eks/

requires:
- aws

provides:
- kubernetes

lifecycle:
  verbs:
  - deploy
  - undeploy
  - upgrade
  readyConditions:
  - dns: ${kubernetes.api.endpoint}
    url: https://${kubernetes.api.endpoint}
  options:
    random:
      bytes: 1536

parameters:
- name: terraform.bucket.name
  env: STATE_BUCKET
- name: terraform.bucket.region
  env: STATE_REGION

- name: dns.domain
  env: DOMAIN_NAME

- name: cloud.region
  env: AWS_DEFAULT_REGION
- name: cloud
  empty: allow
  parameters:
  - name: sshKey
    env: TF_VAR_keypair
  # suggest availability zone(s), else `nZones` will be used
  - name: availabilityZone
    env: TF_VAR_availability_zone
  - name: availabilityZones
    env: TF_VAR_availability_zones
  # deploy into existing VPC
  - name: vpc.id
    env: TF_VAR_vpc_id
  # explicit subnets, else all subnets
  - name: vpc.worker.subnet.ids
    env: TF_VAR_worker_subnet_ids
  # GovCloud cluster bind Route53 zone in public cloud
  - name: aws.accessKey
    env: EXTERNAL_AWS_ACCESS_KEY
  - name: aws.secretKey
    env: EXTERNAL_AWS_SECRET_KEY

- name: component.kubernetes.version
  value: "1.20"
  env: K8S_VERSION

- name: component.kubernetes
  parameters:
  - name: eks
    parameters:
    - name: cluster
      empty: allow
      env: CLUSTER_NAME
    # if `availabilityZones` is set then we use that, for example 'us-east-1a,us-east-1b'
    # else `nZones` number of zones are used from the list of available zones in current region
    # must be at least 2
    - name: nZones
      value: 2
      env: TF_VAR_n_zones
    - name: admin
      empty: allow
      env: EKS_ADMIN
    - name: fargate.enabled
      value: false
      env: FARGATE_ENABLED

  - name: worker
    kind: user
    parameters:
    - name: count
      env: TF_VAR_worker_count
      default: 2
    - name: maxCount
      value: ${component.kubernetes.worker.count}
      env: TF_VAR_worker_max_count
    - name: size
      env: TF_VAR_worker_instance_type
      default: r5.large
    - name: aws.spotPrice
      env: TF_VAR_worker_spot_price
      value: ' '
      empty: allow
    - name: volume.size
      env: TF_VAR_worker_root_volume_size
      value: 50
  - name: worker.mixed
    parameters:
    - name: onDemandBaseCapacity
      value: 0
      env: TF_VAR_on_demand_base_capacity
    - name: onDemandPercentageAboveBaseCapacity
      value: 0
      env: TF_VAR_on_demand_percentage_above_base_capacity
    - name: spotAllocationStrategy
      value: capacity-optimized
      env: TF_VAR_spot_allocation_strategy
    - name: spotInstancePools
      value: 2
      env: TF_VAR_spot_instance_pools

outputs:
- name: dns.domain
- name: dns.name
  fromTfVar: dns_name
- name: dns.baseDomain
  fromTfVar: dns_base_domain

- name: cloud.region
  fromTfVar: region
- name: cloud.availabilityZone
  fromTfVar: zone
- name: cloud.availabilityZones
  fromTfVar: zones

- name: cloud.vpc.id
  fromTfVar: vpc
- name: cloud.vpc.cidr
  fromTfVar: vpc_cidr_block
- name: cloud.vpc.worker.subnet.id
  fromTfVar: worker_subnet_id
- name: cloud.vpc.worker.subnet.ids
  fromTfVar: worker_subnet_ids
- name: cloud.vpc.worker.sg.id
  fromTfVar: worker_sg_id
- name: cloud.iam.worker.instanceProfile
  fromTfVar: worker_instance_profile
- name: cloud.role.worker
  fromTfVar: worker_role

- name: kubernetes.flavor
  value: eks
- name: kubernetes.version
  value: ${component.kubernetes.version}
- name: kubernetes.api.endpoint
  fromTfVar: api_endpoint
- name: kubernetes.api.caCert
  fromTfVar: api_ca_crt
  kind: secret/certificate
- name: kubernetes.api.token
  fromTfVar: token/base64
  kind: secret/token
- name: kubernetes.eks.cluster
  fromTfVar: cluster_name
